# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.entity import Entity  # noqa: F401,E501
from swagger_server import util


class InlineResponse200(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, content: str=None, entities: List[Entity]=None):  # noqa: E501
        """InlineResponse200 - a model defined in Swagger

        :param name: The name of this InlineResponse200.  # noqa: E501
        :type name: str
        :param content: The content of this InlineResponse200.  # noqa: E501
        :type content: str
        :param entities: The entities of this InlineResponse200.  # noqa: E501
        :type entities: List[Entity]
        """
        self.swagger_types = {
            'name': str,
            'content': str,
            'entities': List[Entity]
        }

        self.attribute_map = {
            'name': 'name',
            'content': 'content',
            'entities': 'entities'
        }

        self._name = name
        self._content = content
        self._entities = entities

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse200':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200 of this InlineResponse200.  # noqa: E501
        :rtype: InlineResponse200
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this InlineResponse200.

        Название шаблона приказа  # noqa: E501

        :return: The name of this InlineResponse200.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this InlineResponse200.

        Название шаблона приказа  # noqa: E501

        :param name: The name of this InlineResponse200.
        :type name: str
        """

        self._name = name

    @property
    def content(self) -> str:
        """Gets the content of this InlineResponse200.

        текст шаблона  # noqa: E501

        :return: The content of this InlineResponse200.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content: str):
        """Sets the content of this InlineResponse200.

        текст шаблона  # noqa: E501

        :param content: The content of this InlineResponse200.
        :type content: str
        """
        if content is None:
            raise ValueError("Invalid value for `content`, must not be `None`")  # noqa: E501

        self._content = content

    @property
    def entities(self) -> List[Entity]:
        """Gets the entities of this InlineResponse200.

        список сущностей, которые нужны для полного заполнения документа  # noqa: E501

        :return: The entities of this InlineResponse200.
        :rtype: List[Entity]
        """
        return self._entities

    @entities.setter
    def entities(self, entities: List[Entity]):
        """Sets the entities of this InlineResponse200.

        список сущностей, которые нужны для полного заполнения документа  # noqa: E501

        :param entities: The entities of this InlineResponse200.
        :type entities: List[Entity]
        """

        self._entities = entities
